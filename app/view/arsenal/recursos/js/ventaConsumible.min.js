function actualizarVistaPrevia(){let e=0,o="";productosSeleccionados.length>0?(o='<ul class="list-group">',productosSeleccionados.forEach((t,a)=>{const r=t.precio*t.cantidad;e+=r,o+=`\n                <li class="list-group-item d-flex justify-content-between align-items-center">\n                    ${t.nombre} (Lote: ${t.loteIndex+1}) - Cantidad: ${t.cantidad}\n                    <span>\n                        <button type="button" class="btn btn-sm btn-primary" onclick="incrementarCantidad(${a})">+</button> \n                        <button type="button" class="btn btn-sm btn-danger" onclick="reducirCantidad(${a})">-</button>\n                    </span>\n                    <span class="badge badge-primary badge-pill">S/. ${r.toFixed(2)}</span>\n                </li>`}),o+="</ul>"):o="<p>No hay productos seleccionados.</p>",$("#ventaPreview").html(o),$("#totalVenta").html(`<h4>Total: S/. ${e.toFixed(2)}</h4>`),$("#productosSeleccionados").val(JSON.stringify(productosSeleccionados))}function cargarConsumiblesPorCategoria(e){$.ajax({url:"/gestion/app/controller/ArsenalVentaController.php",type:"GET",data:{action:"obtenerConsumiblesPorCategoria",categoria_id:e},success:function(e){let o;try{o=JSON.parse(e)}catch(e){return console.error("Error al parsear la respuesta:",e),void $("#consumiblesList").html("<p>Error al cargar los consumibles.</p>")}if(!Array.isArray(o)||0===o.length)return void $("#consumiblesList").html("<p>No se encontraron consumibles para esta categoría.</p>");const t={};o.forEach(e=>{const o=e.nombre.toUpperCase();t[o]||(t[o]={id:e.id,nombre:e.nombre,es_compuesto:e.es_compuesto,cantidadMaxima:e.cantidad_maxima||0,detalles:[]}),e.es_compuesto?t[o].detalles.push({precio:parseFloat(e.precio).toFixed(2),cantidadMaxima:e.cantidad_maxima||0}):t[o].detalles.push({stock:e.stock||"No disponible",precio:parseFloat(e.precio).toFixed(2),fecha_vencimiento:e.fecha_vencimiento||"Fecha no disponible"})});let a='<table class="table table-bordered"><thead><tr><th>Nombre</th><th>Detalles</th><th>Acción</th></tr></thead><tbody>';for(let e in t){const o=t[e];let r;r=o.es_compuesto?o.detalles.map((e,t)=>`Precio: <strong>S/. ${e.precio}</strong> | Cantidad Máxima: ${o.cantidadMaxima}`).join("<br>"):o.detalles.map((e,o)=>`${o+1}° Stock: ${e.stock} | Precio: <strong>S/. ${e.precio}</strong> | Vence: ${e.fecha_vencimiento}`).join("<br>"),a+=`\n                    <tr>\n                        <td>${o.nombre}</td>\n                        <td>${r}</td>\n                        <td>\n                            <button type="button" class="btn btn-success" onclick="agregarProducto('${o.nombre}', ${o.id}, '${encodeURIComponent(JSON.stringify(o.detalles))}', ${o.es_compuesto})">\n                                Agregar\n                            </button>\n                        </td>\n                    </tr>`}a+="</tbody></table>",$("#consumiblesList").html(a)},error:function(){$("#consumiblesList").html("<p>Error al cargar los consumibles.</p>")}})}function agregarProducto(e,o,t,a){const r=JSON.parse(decodeURIComponent(t));if(a){const t=r[0].cantidadMaxima;let a=productosSeleccionados.find(o=>o.nombre===e);if(a){if(!(a.cantidad<t))return void alert(`No puedes agregar más de ${t} unidades de este producto compuesto.`);a.cantidad++}else productosSeleccionados.push({id:o,nombre:e,precio:parseFloat(r[0].precio),cantidad:1,stock:r[0].cantidadMaxima,es_compuesto:!0,loteIndex:0})}else{let t=productosSeleccionados.find(o=>o.nombre===e);if(t){if(!(t.cantidad<t.stock))return void alert("No puedes agregar más de este producto. Stock máximo alcanzado.");t.cantidad++}else productosSeleccionados.push({id:o,nombre:e,precio:parseFloat(r[0].precio),cantidad:1,stock:r[0].stock,es_compuesto:!1,loteIndex:0})}actualizarVistaPrevia()}function incrementarCantidad(e){const o=productosSeleccionados[e];o.cantidad<o.stock?(o.cantidad++,actualizarVistaPrevia()):alert("No puedes agregar más de este producto. Stock máximo alcanzado.")}function reducirCantidad(e){const o=productosSeleccionados[e];o.cantidad>1?o.cantidad--:productosSeleccionados.splice(e,1),actualizarVistaPrevia()}var productosSeleccionados=[];$("#ventaForm").on("submit",function(e){e.preventDefault();let o=!0;if(productosSeleccionados.forEach(e=>{void 0===e.es_compuesto&&(console.error(`El producto ${e.id} no tiene la clave 'es_compuesto'.`),o=!1)}),!o)return void Swal.fire({icon:"error",title:"Error",text:"Faltan datos en los productos seleccionados. Revisa la consola para más detalles."});const t=$("#metodo_pago").val();t?Swal.fire({title:"¿Estás seguro?",text:"Estás por registrar esta venta, ¿deseas continuar?",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Sí, registrar",cancelButtonText:"Cancelar"}).then(e=>{e.isConfirmed&&$.ajax({url:"/gestion/app/controller/ArsenalVentaController.php?action=crearVentaConsumible",type:"POST",data:{productosSeleccionados:JSON.stringify(productosSeleccionados),metodo_pago:t},success:function(e){try{const o=JSON.parse(e);o.success?Swal.fire({icon:"success",title:"¡Venta registrada!",text:"La venta se ha registrado exitosamente.",showConfirmButton:!1,timer:2e3}).then(()=>{productosSeleccionados=[],actualizarVistaPrevia(),location.reload()}):o.error&&Swal.fire({icon:"error",title:"Error",text:o.error})}catch(e){console.error("Error al procesar la respuesta:",e),Swal.fire({icon:"error",title:"Error",text:"Ocurrió un error inesperado al registrar la venta."})}},error:function(){Swal.fire({icon:"error",title:"Error",text:"Ocurrió un error al intentar registrar la venta. Inténtalo nuevamente."})}})}):Swal.fire({icon:"warning",title:"¡Atención!",text:"Debes seleccionar un método de pago."})});